{"version":3,"sources":["utils/images-API.js","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Searchbar/Searchbar.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/App.js","index.js"],"names":["fetchImages","searchQuery","currentPage","pageSize","console","log","axios","get","then","response","data","hits","ImageGalleryItem","id","webformatURL","largeImageURL","onImgClick","className","onClick","src","alt","ImageGallery","images","length","map","image","key","Searchbar","state","search","handleChangeSearch","e","setState","currentTarget","value","handleSubmitForm","preventDefault","props","onSubmit","resetForm","this","type","name","autoComplete","autoFocus","placeholder","onChange","Component","Button","modalRoot","document","querySelector","Modal","handleKeydown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","children","App","isLoading","error","showModal","noResult","largeImgUrl","handleSearchPics","fetchPics","options","imagesAPI","prevState","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","openModal","url","prevProps","shouldRenderButton","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6fc2efb7.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n// axios.defaults.headers.common['Authorization'] =\r\n//   'Bearer 19947316-dacc226b3a8c6b348c54c2ce4';\r\nconst apiKey = '19947316-dacc226b3a8c6b348c54c2ce4';\r\n// axios.defaults.baseURL = 'https://pixabay.com/api/';\r\n\r\nconst fetchImages = ({ searchQuery = '', currentPage = 1, pageSize = 12 }) => {\r\n  console.log(searchQuery);\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=${pageSize}`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\n\r\nexport default fetchImages;\r\n","// import { Component } from 'react';\r\n// import { v4 as uuid } from 'uuid';\r\n// import styles from './ContactForm.module.css';\r\n// const initionalState = {\r\n//   name: '',\r\n//   number: '',\r\n// };\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ id, webformatURL, largeImageURL, onImgClick }) => {\r\n  const handleOnImgClick = () => {\r\n    onImgClick(largeImageURL);\r\n  };\r\n  return (\r\n    <li className=\"ImageGalleryItem\" key={id} onClick={handleOnImgClick}>\r\n      <img src={webformatURL} alt=\"\" className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n};\r\n// class ContactForm extends Component {\r\n//   state = initionalState;\r\n//   changeFormHandler = ({ target }) => {\r\n//     const { name, value } = target;\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   submitFormHandler = event => {\r\n//     event.preventDefault();\r\n//     const { name, number } = this.state;\r\n//     const { onAdd } = this.props;\r\n\r\n//     const isValidForm = this.validateForm();\r\n//     if (!isValidForm) return;\r\n\r\n//     onAdd({ id: uuid(), name, number });\r\n//     this.resetForm();\r\n//   };\r\n\r\n//   validateForm = () => {\r\n//     const { name, number } = this.state;\r\n//     const { uniqueCheck } = this.props;\r\n//     if (!name || !number) {\r\n//       alert('Fill in all fields');\r\n//       return false;\r\n//     }\r\n//     return uniqueCheck(name);\r\n//   };\r\n\r\n//   resetForm = () => this.setState(initionalState);\r\n\r\n//   render() {\r\n//     const { name, number } = this.state;\r\n//     return (\r\n//       <form className={styles.form} onSubmit={this.submitFormHandler}>\r\n//         <input\r\n//           className={styles.input}\r\n//           type=\"text\"\r\n//           name=\"name\"\r\n//           placeholder=\"Enter name\"\r\n//           value={name}\r\n//           onChange={this.changeFormHandler}\r\n//         />\r\n//         <input\r\n//           className={styles.input}\r\n//           type=\"tel\"\r\n//           name=\"number\"\r\n//           placeholder=\"Enter phone number\"\r\n//           value={number}\r\n//           onChange={this.changeFormHandler}\r\n//         />\r\n//         <button className={styles.btn} type=\"submit\">\r\n//           Add contact\r\n//         </button>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\nImageGalleryItem.propTypes = {\r\n  id: PropTypes.number,\r\n  webformatURL: PropTypes.string,\r\n  largeImageURL: PropTypes.string,\r\n  onImgClick: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","// import PropTypes from 'prop-types';\r\n// import styles from './ContactList.module.css';\r\n// const ContactItem = ({ id, name, number, onRemove }) => {\r\n//   return (\r\n//     <li className={styles.listItem} key={id}>\r\n//       {name}: {number}{' '}\r\n//       <button className={styles.btn} onClick={() => onRemove(id)}>\r\n//         Delete\r\n//       </button>\r\n//     </li>\r\n//   );\r\n// };\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nconst ImageGallery = ({ images, onImgClick }) => {\r\n  if (images.length === 0) return null;\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(image => (\r\n        <ImageGalleryItem {...image} key={image.id} onImgClick={onImgClick} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n// const ContactList = ({ contacts, onRemove }) => {\r\n//   if (contacts.length === 0) return null;\r\n//   return (\r\n//     <ul>\r\n//       {contacts.map(contact => (\r\n//         <ContactItem {...contact} onRemove={onRemove} />\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n// };\r\n\r\n// ContactItem.propTypes = {\r\n//   id: PropTypes.string.isRequired,\r\n//   name: PropTypes.string.isRequired,\r\n//   number: PropTypes.string,\r\n//   onRemove: PropTypes.func,\r\n// };\r\n\r\nexport default ImageGallery;\r\n","import PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\n// import PropTypes from 'prop-types'\r\n\r\n// import styles from './ContactFilter.module.css';\r\n// const initialState = {\r\n//   search: '',\r\n// };\r\nclass Searchbar extends Component {\r\n  // state = initialState;\r\n  state = {\r\n    search: '',\r\n  };\r\n  handleChangeSearch = e => {\r\n    this.setState({ search: e.currentTarget.value });\r\n    console.log(this.state.search);\r\n  };\r\n  handleSubmitForm = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.search);\r\n    this.resetForm();\r\n  };\r\n  resetForm = () => this.setState({ search: '' });\r\n\r\n  render() {\r\n    const { search } = this.state;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmitForm}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            name=\"search\"\r\n            value={search}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChangeSearch}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\n// Filter.propTypes = {\r\n//   filter: PropTypes.string.isRequired,\r\n//   onChange: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Searchbar;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nconst modalRoot = document.querySelector('#modal-root');\r\nclass Modal extends Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeydown);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeydown);\r\n  }\r\n  handleKeydown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\nexport default Modal;\r\n","import { Component } from 'react';\nimport imagesAPI from '../utils/images-API';\n\nimport ImageGallery from './ImageGallery';\nimport Searchbar from './Searchbar';\nimport './styles.css';\nimport Button from './Button';\nimport Modal from './Modal';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\n\n// import styles from './App.module.css';\nclass App extends Component {\n  state = {\n    images: [],\n    currentPage: 1,\n    searchQuery: '',\n    isLoading: false,\n    error: null,\n    showModal: false,\n    noResult: false,\n    largeImgUrl: '',\n  };\n  // async componentDidMount() {\n  //   const response = await axios.get(\n  //     'https://pixabay.com/api/?q=что_искать&page=номер_страницы&key=твой_ключ&image_type=photo&orientation=horizontal&per_page=12',\n  //   );\n  // }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchPics();\n    }\n    // if (this.state.images.length === 0) {\n    //   this.setState({ noResult: true });\n    // }\n  }\n\n  handleSearchPics = search => {\n    this.setState({\n      searchQuery: search,\n      currentPage: 1,\n      images: [],\n      error: null,\n    });\n  };\n  fetchPics = () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = {\n      searchQuery,\n      currentPage,\n    };\n    this.setState({ isLoading: true });\n    return imagesAPI(options)\n      .then(hits => {\n        if (hits.length > 0) {\n          this.setState(prevState => ({\n            images: [...prevState.images, ...hits],\n            currentPage: prevState.currentPage + 1,\n          }));\n        } else {\n          this.setState({ noResult: true });\n        }\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n        this.setState({ isLoading: false });\n      });\n  };\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n  openModal = url => {\n    this.setState({ largeImgUrl: url });\n    this.toggleModal();\n  };\n  render() {\n    const {\n      images,\n      isLoading,\n      error,\n      showModal,\n      noResult,\n      largeImgUrl,\n    } = this.state;\n    const shouldRenderButton = images.length > 0 && !isLoading;\n    // const visibleContact = this.getFilteredContacts();\n    return (\n      <div>\n        <Searchbar onSubmit={this.handleSearchPics} />\n        <div className=\"Container\">\n          <ImageGallery images={images} onImgClick={this.openModal} />\n\n          {noResult && <h2 className=\"Message\">Sorry, no results</h2>}\n\n          {error && <h2 className=\"Message\">Sorry, something went wrong!!!</h2>}\n          {shouldRenderButton && <Button onClick={this.fetchPics} />}\n          {isLoading && (\n            <Loader\n              type=\"BallTriangle\"\n              color=\"#00BFFF\"\n              height={80}\n              width={80}\n            />\n          )}\n          {showModal && (\n            <Modal onClose={this.toggleModal}>\n              <img src={largeImgUrl} width=\"800\" height=\"600\" alt=\"pic\" />\n            </Modal>\n          )}\n        </div>\n      </div>\n      // <div className={styles.wrapper}>\n      //   <h2 className={styles.title}>Phonebook</h2>\n      //   <ContactForm\n      //     onAdd={this.contactsAddHandler}\n      //     uniqueCheck={this.checkContactUnique}\n      //   />\n      //   <h2 className={styles.title}>Contact List</h2>\n      //   <ContactFilter filter={filter} onChange={this.filterContactFilter} />\n      //   <ContactList\n      //     contacts={visibleContact}\n      //     onRemove={this.handleRemoveContact}\n      //   />\n      // </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './reset.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}